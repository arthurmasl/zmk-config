/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        default_layer {
            bindings = <&to 0>;
            key-positions = <4 5 3>;
            layers = <0>;
            require-prior-idle-ms = <2000>;
            timeout-ms = <2000>;
        };

        bt_layer {
            bindings = <&to 1>;
            key-positions = <16 17 15>;
            layers = <1>;
            timeout-ms = <2000>;
            require-prior-idle-ms = <2000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHIFT  |
            //                    | ALT | CTRL | SPC |   | ENT | GUI  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y    &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D  &kp F      &kp G        &kp H    &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B        &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &mo 2  &kp LCTRL  &kp SPACE    &kp RET  &kp RGUI  &mo 2
            >;
        };

        bt_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT | */

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        symbols_layer {
            bindings = <
&trans     &kp HASH         &kp PLUS     &kp MINUS      &kp EQUAL     &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp N7        &kp N8        &kp N9        &kp CARET      &trans
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp AMPERSAND  &kp PERCENT   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0         &kp GRAVE
&trans     &kp UNDERSCORE   &kp PIPE     &kp DOLLAR     &kp ASTERISK  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH  &trans
                                         &trans         &trans        &trans                  &trans                 &trans        &trans
            >;
        };

        /**/
        /*                 raise_layer { */
        /* // ----------------------------------------------------------------------------------------- */
        /* // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP | */
        /* // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   | */
        /* // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   | */
        /* //                    | GUI |     | SPC |   | ENT |     | ALT | */
        /*                         bindings = < */
        /*    &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC */
        /*    &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE */
        /*    &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE */
        /*                     	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT */
        /*                         >; */
        /*                 }; */
    };
};
